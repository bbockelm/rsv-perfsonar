#!/bin/sh

### BEGIN INIT INFO
# Provides: simplevisor
# Required-Start:    $syslog
# Required-Stop:     $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start simplevisor
# Description:       simplevisor send rsv-perfsonar matrics to cern MQ
### END INIT INFO

# Source function library.
[ -f /etc/rc.d/init.d/functions ] || exit 0
. /etc/rc.d/init.d/functions

cmd="simplevisor --conf /etc/rsv/stompclt/simplevisor.cfg start"
user=""

name=`basename $0`
pid_file="/var/run/publisher-simplevisor.pid" #needs to match what is in the config

get_pid() {
    cat "$pid_file"
}

is_running() {
    [ -f "$pid_file" ] && ps `get_pid` > /dev/null 2>&1
}

case "$1" in
    start)
    if is_running; then
        echo "Already started"
    else
        echo "Starting $name"
	mkdir -p /var/lib/simplevisor
        if [ -z "$user" ]; then
	    chown $user:$user /var/lib/simplevisor
            daemon $cmd &
        else
            daemon --user "$user" $cmd &
        fi
	echo -n "Waiting for $name to start "
        for i in {1..60}
	do
		if is_running; then
		   	       exit 0
			       	    fi
					echo -n "."
					     sleep 1
					     done
					     echo "Failed to start in 30 seconds"
					     exit 1
    fi
    ;;
    stop)
    if is_running; then
        echo -n "Stopping $name (could take up to a minute) "
        kill `get_pid`
        for i in {1..60}
        do
            if ! is_running; then
                break
            fi

            echo -n "."
            sleep 1
        done
        echo

        if is_running; then
            echo "Not stopped; may still be shutting down or shutdown may have failed"
            exit 1
        else
            echo "Stopped"
            if [ -f "$pid_file" ]; then
                rm "$pid_file"
            fi
        fi
    else
        echo "Not running"
    fi
    ;;
    restart)
    $0 stop
    if is_running; then
        echo "Unable to stop, will not attempt to start"
        exit 1
    fi
    $0 start
    ;;
    status)
    if is_running; then
        echo "Running"
    else
        echo "Stopped"
        exit 1
    fi
    ;;
    *)
    echo "Usage: $0 {start|stop|restart|status}"
    exit 1
    ;;
esac

exit 0
